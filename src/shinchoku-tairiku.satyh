@require: math
@require: option
@require: annot
@require: footnote-scheme
@require: code
@require: hdecoset

@import: graphics
@import: context
@import: config
@import: captioned-box
@import: bibliography
@import: table-of-contents
@import: command
@import: side-index
@import: header
@import: preface

@import: itemize

module ShinchokuTairiku : sig

  val document : block-text -> block-text -> document

end = struct

  let make-footer = block-nil

  let page-shift pginfo (x, y) =
    let l = 3mm in
    match PageSide.of-page-number pginfo#page-number with
    | LeftSide -> (x -' 10pt, y)
    | RightSide -> (x +' 10pt, y)

  let document preface inner =
    %% initial context
    let ctx = Context.default Config.text-width in
    %% module settings
    let () = ShinchokuTairikuToc.register-chapter-hook CaptionedBox.set-chapter in
    let () = ShinchokuTairikuToc.register-page-chapter-hook (fun pnum num title ->
      Header.set-chapter num title pnum
    ) in
    let () = ShinchokuTairikuToc.register-page-section-hook (fun pnum num title ->
      Header.set-section num title pnum
    ) in
    %% -- preface --
    let bb-preface = Preface.scheme ctx preface in
    %% -- main --
    let bb-main = read-block ctx inner in
    %% -- table of contents --
    %% this must be after processing bb-main
    let bb-toc = ShinchokuTairikuToc.make ctx in
    %% -- page settings --
    let pagecontf pginfo =
      let () = FootnoteScheme.start-page () in
      (|
        text-height = Config.text-height;
        text-origin = page-shift pginfo Config.text-origin;
      |)
    in
    let pagepartsf pbinfo =
      (|
        header-content = Header.scheme pbinfo#page-number;
        header-origin  = page-shift pbinfo Config.header-origin;
        footer-content = make-footer;
        footer-origin  = page-shift pbinfo Config.footer-origin;
      |)
    in
    let page = UserDefinedPaper (Config.page-width, Config.page-height) in
    let bb = bb-preface +++ bb-toc +++ bb-main in
    page-break page pagecontf pagepartsf bb

end

let document = ShinchokuTairiku.document
