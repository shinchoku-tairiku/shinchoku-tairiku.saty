@require: list

module EventListeners : sig

  type 'a t

  val make : unit -> 'a t

  %% (unit -> unit) を返すようにしてキャンセルできるようにしてもいいが使う機会がないのでつけない
  val add : ('a -> unit) -> 'a t -> unit

  val clear : 'a t -> unit

  %% 実行順は未定義
  val dispatch : 'a -> 'a t -> unit

end = struct

  type 'a t = Listeners of (('a -> unit) list) ref

  let make () =
    let-mutable ls-ref <- [] in
    Listeners ls-ref

  let add l (Listeners ls-ref) =
    ls-ref <- l :: !ls-ref

  let clear (Listeners ls-ref) =
    ls-ref <- []

  let dispatch v (Listeners ls-ref) =
    List.iter (fun l -> l v) !ls-ref

end
