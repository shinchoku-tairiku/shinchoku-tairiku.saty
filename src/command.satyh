@import: context
@import: config
@import: link

type align =
  | Start
  | End
  | Center
  | SpaceBetween
  | SpaceEvenly

module ShinchokuTairikuCmd : sig

  direct +row : [align?; inline-text list] block-cmd
  direct +column : [inline-text; block-text] block-cmd

end = struct

  let inline-join start endd delim ibs =
    let-rec f l =
      match l with
      | [] -> inline-nil
      | [x] -> x
      | x :: xs -> x ++ delim ++ f xs
    in
    start ++ f ibs ++ endd

  let-block ctx +row ?:alignopt its =
    let align = Option.from SpaceEvenly alignopt in
    let ibs = List.map (read-inline ctx) its in
    let ib =
      match align with
      | Start -> inline-join inline-nil inline-fil inline-nil ibs
      | End -> inline-join inline-fil inline-nil inline-nil ibs
      | Center -> inline-join inline-fil inline-fil inline-nil ibs
      | SpaceBetween -> inline-join inline-nil inline-nil inline-fil ibs
      | SpaceEvenly -> inline-join inline-fil inline-fil inline-fil ibs
    in
    line-break true true ctx ib

  let-block ctx +column title inner =
    let make-title ctx =
      let ctx =
        ctx
        |> Context.set-font Config.font-cjk-gothic-bold
        |> set-font-size Config.font-size-large
        |> set-paragraph-margin 10pt 10pt
      in
      read-inline ctx {コラム:} ++ inline-skip 3pt ++ read-inline ctx title
      |> line-break true false ctx
    in
    let make-inner ctx =
      let ctx = set-paragraph-margin Config.paragraph-margin-top Config.paragraph-margin-bottom ctx in
      read-block ctx inner
    in
    let decoset = VDecoSet.simple-frame-stroke 1pt (Color.gray 0.5) in
    let pads = (8pt, 8pt, 8pt, 8pt) in
    let ctx-outer = set-paragraph-margin 20pt 20pt ctx in
    block-frame-breakable ctx-outer pads decoset
      (fun ctx -> make-title ctx +++ make-inner ctx)

end
